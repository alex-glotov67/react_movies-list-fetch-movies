{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","props","addMovie","useState","searchMovie","setSearchMovie","setMovie","isMovieValid","setIsMovieValid","fromApiMovie","a","fetch","then","response","ok","Error","status","statusText","json","apiMovie","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","data","setMovies","find","oldMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8d60e4c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    title = '',\n    description = '',\n    imgUrl,\n    imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getData } from '../../api/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n  const [searchMovie, setSearchMovie] = useState('');\n  const [movie, setMovie] = useState(null as Movie | null);\n  const [isMovieValid, setIsMovieValid] = useState(true);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSearchMovie(value);\n    setIsMovieValid(true);\n  };\n\n  const fromApiMovie = async () => {\n    const apiMovie = await getData(searchMovie);\n\n    if (apiMovie.Response === 'False') {\n      setIsMovieValid(false);\n      setMovie(null);\n\n      return;\n    }\n\n    setIsMovieValid(true);\n\n    setMovie({\n      title: apiMovie.Title,\n      description: apiMovie.Plot,\n      imgUrl: apiMovie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${apiMovie.imdbID}/`,\n      imdbId: apiMovie.imdbID,\n    });\n\n    setSearchMovie('');\n  };\n\n  const searchMovieSubmit = () => {\n    fromApiMovie();\n  };\n\n  const addNewMovie = () => {\n    if (!isMovieValid) {\n      return;\n    }\n\n    addMovie(movie as Movie);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          searchMovieSubmit();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                {\n                  'is-danger': !isMovieValid,\n                },\n              )}\n              value={searchMovie}\n              onChange={handleChange}\n            />\n          </div>\n\n          {!isMovieValid && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={(event) => {\n                event.preventDefault();\n                addNewMovie();\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie as Movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=5f79d9b4&';\n\nexport const getData = (title: string):Promise<ApiMovie> => {\n  return fetch(`${API_URL}&t=${title}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.find(oldMovie => oldMovie.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}